# Generated by Django 5.2.4 on 2025-08-22 17:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(blank=True, max_length=300)),
                ('price_per_day', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('extra_amenities', models.TextField(blank=True)),
                ('max_capacity', models.PositiveIntegerField(blank=True, help_text='จำนวนผู้เข้าร่วมสูงสุดที่รองรับ', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_num', models.CharField(max_length=15)),
                ('dob', models.DateField()),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VenueAmenity',
            fields=[
                ('venue', models.OneToOneField(db_column='venue_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mylogin.venue')),
                ('wifi', models.BooleanField(default=False)),
                ('parking', models.BooleanField(default=False)),
                ('equipment', models.BooleanField(default=False)),
                ('sound_system', models.BooleanField(default=False)),
                ('projector', models.BooleanField(default=False)),
                ('air_conditioning', models.BooleanField(default=False)),
                ('seating', models.BooleanField(default=False)),
                ('drinking_water', models.BooleanField(default=False)),
                ('first_aid', models.BooleanField(default=False)),
                ('cctv', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='venue',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'รออนุมัติ'), ('approved', 'อนุมัติแล้ว'), ('rejected', 'ถูกปฏิเสธ'), ('cancelled', 'ยกเลิกแล้ว'), ('completed', 'เสร็จสิ้น')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='mylogin.venue')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VenueImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='venue_images/')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('venue', models.ForeignKey(db_column='venue_id', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mylogin.venue')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
    ]
